#labels Documentation
#summary Documentation for content in the components.page.util package.
_Package: 'components.page.util'_ 

This file is part of the A.W.S.O.M.E.cms distribution.
Detailed copyright and licensing information can be found
in the doc/COPYRIGHT and doc/LICENSE files which should be
included in the distribution.
== Contents: ==
The following classes are located in this package
=== Classes: ===
== MenuItem ==
===== ,,class,, !MenuItem =====
Menu item that is used in the admin menu
 ==== *public* _void_ *`__construct`* ( _string_ `$name`, _string_ `$text`, _string_ `$page`, _string_ `$parent` ) ====
  Constructor
 ==== *public* _bool_ *`addChild`* ( _MenuItem_ `$child` ) ====
  Add a menu items to this item, returns true or false depending if succeded
 ==== *private* _int_ *`sort`* ( _MenuItem_ `$child1`, _MenuItem_ `$child2` ) ====
  sort the items in this MenuItem
 ==== *public* _string_ *`toHTML`* (  ) ====
  Create a HTML represenation of this MenuItem
== Menu ==
===== ,,class,, !Menu =====
Menu class, this is the root element of the menu
 ==== *public* *static* _Menu_ *`getInstance`* (  ) ====
  Singelton
 ==== *private* _void_ *`__construct`* (  ) ====
  Constructor
 ==== *public* _bool_ *`addChild`* ( _MenuItem_ `$child` ) ====
  Add a menu items to this menu, returns true or false depending if succeded
 ==== *public* _string_ *`toHTML`* (  ) ====
  Create HTML representation of this menu
 ==== *private* _int_ *`sort`* ( _MenuItem_ `$child1`, _MenuItem_ `$child2` ) ====
  Sort the items in the menu
== Tree ==
===== ,,class,, !Tree =====
Tree class for the page admin tree
 ==== *public* *static* _void_ *`getInstance`* (  ) ====
 ==== *private* _void_ *`__construct`* ( _string_ `$name`, _string_ `$element` ) ====
  Constructor
 ==== *public* _void_ *`addChild`* ( _TreeNode_ `$child` ) ====
  Add a child to the tree
 ==== *public* _void_ *`addIcon`* (  ) ====
 ==== *public* _string_ *`getName`* (  ) ====
  get the name of the javascript element
 ==== *public* _string_ *`toJavascript`* (  ) ====
  Create the javascript code for the tree
== TreeNode ==
===== _abstract_ ,,class,, !TreeNode =====
Abstract class for the nodes of the tree
 ==== *public* _void_ *`setParent`* ( _Tree_ `$parent` ) ====
  Set the parent, which is the tree
 ==== *public* _void_ *`setType`* ( _int_ `$type` ) ====
  Set the type of this node
 ==== *public* _int_ *`getType`* (  ) ====
  Get the type of this node
 ==== *public* _string_ *`registerIcons`* (  ) ====
  function that is called once on each type of node, you can add icons to the tree here
== PageItem ==
===== ,,class,, !PageItem ,,extends,, `[DOC_ComponentsPageUtil#TreeNode TreeNode]` =====
The node for the page items
 ==== *public* _void_ *`__construct`* ( _object_ `$record` ) ====
  Constructor
 ==== *public* _string_ *`toJavascript`* (  ) ====
  Create the javascript code for the tree
== Folder ==
===== ,,class,, !Folder ,,extends,, `[DOC_ComponentsPageUtil#TreeNode TreeNode]` =====

 ==== *public* _void_ *`__construct`* ( _object_ `$record` ) ====
  Constructor
 ==== *public* _string_ *`toJavascript`* (  ) ====
  Create the javascript code for the tree
== RootFolder ==
===== ,,class,, !RootFolder ,,extends,, `[DOC_ComponentsPageUtil#Folder Folder]` =====

 ==== *public* _string_ *`toJavascript`* (  ) ====
  Create the javascript code for the tree
